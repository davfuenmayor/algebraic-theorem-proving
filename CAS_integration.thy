(**************************************************************)
(*           Copyright (c) 2024 David Fuenmayor               *)
(*       MIT License (see LICENSE file for details)           *)
(**************************************************************)
theory CAS_integration
imports base
begin

section \<open>Setting-up CAS Integration\<close>

(*Routines for integrating CAS (SageMath) for manipulating polynomials*)
ML_file\<open>SagePoly.ML\<close>

(*Declares two methods for polynomial rewriting: 
  - polysimp: polynomial simplification by rewriting in canonical form (ie. as sum of monomials)
  - polyfact: polysimp followed by factorization (when applicable) *)
method_setup poly_reduce = 
\<open>Args.term >> (fn params => fn ctxt =>  SIMPLE_METHOD' (SUBGOAL (cmd_exec ctxt (reduce_cmd (term2str ctxt params)))))\<close>
method_setup poly_factorize =
\<open>Args.term >> (fn params => fn ctxt =>  SIMPLE_METHOD' (SUBGOAL (cmd_exec ctxt (factorize_cmd (term2str ctxt params)))))\<close>

(*Declares a method for ideal-membership checking (IMC):
  - polyimc: checks whether a given polynomial belongs to the ideal generated by a given set of polynomials *)
method_setup poly_imc = 
\<open>Args.term >> (fn params => fn ctxt =>  SIMPLE_METHOD' (SUBGOAL (cmd_exec ctxt (imc_cmd (term2str ctxt params)))))\<close>

end